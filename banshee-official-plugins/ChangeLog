2006-06-13  Aaron Bockover  <aaron@abock.org>

	* plugins/Radio/RadioSource.cs: Create user plugin directory if it 
	does not exist (Todd Zullinger, BGO #344725)

2006-06-02  Fredrik Hedberg  <fredrik@avafan.com>

	* plugins/Recommendation/RecommendationPane.cs: Fix the url-hashing.

2006-05-25  Lukas Lipka  <lukas@pmad.net>

	* plugins/Recommendation/RecommendationPane.cs: Commit a patch from Koike
	Kazuhiko, which checks if we are still playing the same artist as we requested,
	prior to displaying the details pane.

2006-05-24  Aaron Bockover  <aaron@abock.org>

	* plugins/MiniMode/MiniModeWindow.cs: Catch any possible exception
	that GConf may throw and set a sane default value

2006-05-24  Lukas Lipka  <lukas@pmad.net>

	* plugins/Recommendation/RecommendationPlugin.cs: Fix more glitches related
	to source focus tracking. Move stuff around.

	* plugins/Recommendation/RecommendationPane.cs: Fix nasty code indenting.

2006-05-22  Aaron Bockover  <aaron@abock.org>

	* plugins/*/*.cs: Do not use Mono.Unix; be sure that all calls to
	Catalog.Get*String go through Banshee.Plugins; thanks to 
	Горан Ракић <gox@devbase.net> for making the Podcast plugin translatable
	and for providing ideas on plugin localization:
	
		http://goran.fimaks.net/moin.cgi/BansheeL10N

	* plugins/*/Makefile.am: Compile Common.cs into all assemblies

	* plugins/*/AssemblyInfo.cs.in: Moved global information to Common.cs.in

	* plugins/Makefile.am: EXTRA_DIST Common.cs.in

	* Makefile.am: Fixed ordering of SUBDIRS to the way I like it :)

	* configure.ac: generate plugins/Common.cs

	* plugins/Common.cs: Provide a wrapper class for now that works with
	both branches of Banshee; if HEAD is available, use the new 
	Mono.Gettext.Catalog API that supports gettext domains bound to 
	assemblies in order to pull translations in from banshee-plugins 
	otherwise use Mono.Unix.Catalog to pull translations from the global
	default application gettext domain (banshee)
	
2006-05-22  Aaron Bockover  <aaron@abock.org>

	* plugins/MiniMode/SourceModel.cs: Fixed model to be a Gtk.TreeStore 
	instead of a Gtk.ListStore; works without using ActiveSourceIndex 
	and if building against Banshee 0.11.x, supports child sources

	* plugins/MiniMode/SourceComboBox.cs: Cleaned up, adding proper locking
	where necessary, and work with new SourceModel

	* plugins/MiniMode/MiniModeWindow.cs: reflect a minor API change 
	in SourceComboBox

	* plugins/MiniMode/Makefile.am: Added SourceModel.cs

2006-05-22  Lukas Lipka  <lukas@pmad.net>

	* plugins/Recommendation/RecommendationPlugin.cs: Fix the remaining
	glitches when hiding the pane. Show the pane when we switch back to
	the original source.

2006-05-16  Patrick van Staveren  <trick@vanstaveren.us>

	* Various `make dist` and `make install` fixes - add
	resources and debug info where necessary.

2006-05-14  Lukas Lipka  <lukas@pmad.net>

	* plugins/Recommendation/RecommendationPlugin.cs: Hide the recommendation
	pane when the active source changes.

2006-05-11  Aaron Bockover  <aaron@abock.org>

	* configure.ac: If Banshee 0.11.x (plugin API v2) is detected, use gmcs
	since 0.11.x is now built with gmcs and uses .NET 2.0 libraries; 0.10.x
	compatible plugins will be built with mcs/.NET 1.0 if a 0.10.x Banshee
	is detected

2006-05-08  Aaron Bockover  <aaron@abock.org>

	* plugins/SmartPlaylists/QueryBuilderModel.cs: sqlite uses RANDOM instead
	of RAND; fixes 'Selected by Random' option

2006-05-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* plugins/SmartPlaylists/SmartPlaylist.cs: Remove override from Delete
	method.

2006-05-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* plugins/Podcast/UI/SyncPreferenceComboBox.cs.cs: Moved to
	SyncPreferenceComboBox.cs, and minor string fix.

2006-05-08  Gabriel Burt  <gabriel.burt@gmail.com>

	* plugins/SmartPlaylists/Plugin.cs: Listen for SourceManager and Library
	events prior to loading the smart playlists so that we add them to our
	internal list.  Remove smart playlists from the source list when the
	plugin is disabled.

	* plugins/SmartPlaylists/Editor.cs: Allow smart playlists to be renamed, again.

	* plugins/SmartPlaylists/SmartPlaylist.cs: Delay refreshing the current members unless the
	Library is loaded.  Fix some event triggers so that the track view is
	actually updated.

2006-05-08  Mike Urbanski  <michael.c.urbanski@gmail.com>

	* plugins/Podcast/DownloadCore/DownloadCore.cs: Fixed user event 
	icon strangeness.
	
	* plugins/Podcast/DownloadCore/DownloadTask.cs: *.tmp files are no 
	longer downloaded to the Library.

	* plugins/Podcast/DownloadCore/HttpDownloadTask.cs: Ranges are no 
	longer added to HTTP request headers unnecessarily. (BNC #341042)

2006-05-06  Aaron Bockover  <aaron@abock.org>

	* configure.ac: 
	* plugins/Makefile.am: Added Podcast plugin build foo

	* plugins/Podcast/*: Added initial commit of Mike Urbanski's Podcast
	plugin

2006-05-04  Aaron Bockover  <aaron@abock.org>

	* configure.ac: Bump version to 0.11.0 to be on par with Banshee HEAD;
	added necessary output files for AssemblyInfo.cs; define BANSHEE_0_10
	if pluginapi < 2

	* plugins/MiniMode/AssemblyInfo.cs.in:
	* plugins/Recommendation/AssemblyInfo.cs.in:
	* plugins/SmartPlaylists/AssemblyInfo.cs.in:
	* plugins/Radio/AssemblyInfo.cs.in: Added assembly version metadata

	* plugins/MiniMode/Makefile.am: 
	* plugins/Recommendation/Makefile.am:
	* plugins/SmartPlaylists/Makefile.am:
	* plugins/Radio/Makefile.am: Do not define MCS_FLAGS; define 
	CUSTOM_MCS_FLAGS if more are needed; compile AssemblyInfo.cs

	* plugins/Makefile.am: Do not build SmartPlaylists plugin if building
	against Banshee 0.10.x (first plugin API revision)

	* plugins/Radio/RadioSource.cs: conditionally decide whether to use
	System.Uri or Banshee.Base.SafeUri depending on Banshee version

2006-05-04  Aaron Bockover  <aaron@abock.org>

	* plugins/SmartPlaylists/SmartPlaylist.cs: Do not try to override Delete;
	fixes broken build, but may not be intended behavior

2006-05-04  Gabriel Burt  <gabriel.burt@gmail.com>

	* plugins/Recommendation/RecommendationPane.cs: Double-encode '/'
	characters in the artist name b/c Last.fm requires it.

2006-05-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* plugins/Recommendation/Makefile.am: Added reference to System.Web

	* plugins/Recommendation/RecommendationPane.cs: Encode the artist before
	using in URLs. (BGO #340511)

	* plugins/MiniMode/MiniModeWindow.cs: Put shuffle/repeat buttons in same
	state as the main UI has them.  Based on buggy patch from Lukas Lipka.
	:) (BGO #338503)

2006-05-03  Gabriel Burt  <gabriel.burt@gmail.com>

	* plugins/SmartPlaylists/SmartPlaylistPlugin.cs: Moved to Plugin.cs
	* plugins/SmartPlaylists/SmartPlaylistEditor.cs: Moved to Editor.cs

	* plugins/SmartPlaylists/QueryBuilder.cs: Start the query builder with the
	matchCheckBox checked by default.  Add some widget shortcuts.

	* plugins/SmartPlaylists/smart-playlist.glade: Add widget shortcut for
	name entry, make editor window not resizable.

	* plugins/SmartPlaylists/QueryBuilderModel.cs: Add Most/Least Recently
	Played as a "selected by" option, make number spin entries width = 4 so
	year and other number fit.  Add minutes as option for relative date
	conditions.  Use Catalog.GetString for condition field names and add Path,
	Year, and rename Number of Plays to Play Count.

	* plugins/SmartPlaylists/Plugin.cs:
	* plugins/SmartPlaylists/Editor.cs:
	* plugins/SmartPlaylists/SmartPlaylist.cs: Instead of wrapping a
	PlaylistSource, subclass Banshee.Sources.Source, which allows for editing
	via the "Source Properties" menu option, a custom icon, disallowing 
	adding/removing tracks.  Also, use our own SmartPlaylistEntries table
	instead of the PlaylistEntries table. Actually showing the tracks in a smart
	playlist is currently broken/flakey.

	* plugins/SmartPlaylists/Makefile.am: Update with renamed source files,
	add icon to resources list.

	* plugins/SmartPlaylists/source-smart-playlist.png: New file.

2006-05-02  Gabriel Burt  <gabriel.burt@gmail.com>

	* plugins/SmartPlaylists/QueryBuilder.cs: Move standard operators and
	filters here from QueryBuilderModel.cs.  Modify QueryFilter (was
	QueryFilterOperation) to work with multiple-widget inputs (like an entry
	with a dropdown).  Make the input widgets not expand to fill, and pack the
	+/- buttons at the end so they stay right-aligned.  Use Catalog.GetString
	for all GUI strings.  And finally, added necessary logic to reconstruct
	edit dialog from saved Smart Playlists.

	* plugins/SmartPlaylists/QueryBuilderModel.cs: Changes to make QueryMatch
	objects work with multiple-widget inputs.

	* plugins/SmartPlaylists/SmartPlaylist.cs: Modify Insert statement so that
	null values get inserted as nulls, not empty strings.

2006-05-02  Aaron Bockover  <aaron@abock.org>

	* configure.ac: Added plugin Makefile outputs

	* Makefile.am: Added plugins to SUBDIRS

	* plugins/Makefile.am: Added with conditional SUBDIRS for plugins

	* plugins/MiniMode/Makefile.am:
	* plugins/Radio/Makefile.am:
	* plugins/Recommendation/Makefile.am:
	* plugins/SmartPlaylists/Makefile.am: Updated to work with new build
	system (pluginsdir)

	* plugins/MiniMode/MiniModeWindow.cs: Fixed to not rely on core Banshee
	assembly, small code cleanup

2006-05-02  Aaron Bockover  <aaron@abock.org>

	* banshee-official-plugins: Initial import of skeleton build system

